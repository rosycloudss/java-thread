1. 等待/通知机制
    wait(): 是当前执行代码的线程等待，将当前线程置入"预执行队列" 中，并且在wait()所在的代码行处停止执行，直到接到通知或被中断位置
            在调用wait()之前，线程必须或得该对象的对象级别锁，即只能在同步方法或同步代码块中调用wait()方法。
            执行 wait()方法之后 当前线程释放锁，在从wait()返回前，线程与其他线程竞争重新获得锁
            如果调用wait()持有适当的锁，则会抛出 IllegalMonitorStateException，它是RuntimeException的一个子类，因此不需要try-catch语句进行捕捉异常

    notify(): 通知那些可能等待的该对象的对象锁的其他线程
              在同步方法或同步代码块中调用，如果调用时线程没有持有适当的锁，就会抛出IllegalMonitorStateException
              如果有多个线程等待，则由线程规划器随机挑选出其中一个呈wait状态的线程，对其发出通知 notify， 并使它等待获取该对象的对象锁

              注：执行notify()方法或，当前线程不会马上释放该对象锁，呈wait状态的线程也不会立刻获取该对象锁，要等到notify()方法的线程将程序执行完，也就是退出synchronized代码块后，当前线程
              才会释放锁，而呈wait状态所在的线程才可以获取改对象锁

    